<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="controladorError.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAAKAAAACQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAPAAA
        AG8AAACYAAAAsQAAAL0AAAC6AAAAqQAAAIsAAABdAAAAKgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAcgAA
        AMYAAADzAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAADnAAAAqwAAAE8AAAAKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAYQAA
        ANMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9wAA
        AK8AAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAA
        AJoAAAD5AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAOUAAABkAQEBAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABoAAACyAQAA/1JRT/85OTr/bGtp/2doaP9ramn/aWlq/1NTUv9XWVv/IiAf/3d2df9eX2D/YmFh/0dI
        Sf9ZWVj/QEA//2hoaP9gYF//VFZX/wcICfYAAAB6AAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAATAAAArQAAAP8AAAD/X1tY/5aYmf+opqT/sLK1/5WTkf+6vL3/cnFw/5yfof8aGRn/rKqo/7e4
        uf+rqqr/pqeo/5uamv94eHn/ra2s/4WEg/98f4L/AgME/wAAAPgAAABuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAIsAAAD/AAAA/wAAAP8aGBf/UVFR/05NTf9UVVX/ODc3/1dXV/8lJib/P0BA/wYG
        B/9DQUD/VldX/z09Pf9MTEz/TExL/1BRUf9QUFD/RUVF/0NERf8DBAX/AAAA/wAAAOwAAABGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABJAAAA8QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wgICP8YGBj/Gxsb/xQU
        FP8FBQX/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AMUAAAAWAAAAAAAAAAAAAAAAAAAADAAAALgAAAD/AAAA/wAAAP8AAAD/AAAA/ycnJ/+BgYH/wsLC/93d
        3f/g4OD/1dXV/7i4uP+MjIz/Xl5e/zo6Ov8hISH/FBQU/xAQEP8ZGRn/PT09/1RUVP8FBQX/AAAA/wAA
        AP8AAAD/AAAA/wAAAG4AAAAAAAAAAAAAAAAAAABJAAAA9gAAAP8AAAD/AAAA/wEBAf8xMTH/hYWF/6+v
        r//CwsL/29vb//v7+//////////////////+/v7/8vLy/+Li4v/S0tL/zs7O/9nZ2f/x8fH/c3Nz/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAywAAABMAAAAAAAAAAQAAAJgAAAD/AAAA/wAAAP8AAAD/EBAQ/xsb
        G/86Ojr/e3t7/4ODg/98fHz/qamp/+jo6P/7+/v//////////////////////////////////////9XV
        1f8fHx//AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAATAAAAAAAAAAZAAAA0QAAAP8AAAD/AAAA/wEB
        Af8FBQX/AAAA/zY2Nv9+fn7/iIiI/3t7e/99fX3/k5OT/3l5ef/FxcX/+fn5////////////////////
        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
        AAGAAAADwAAAA+AAAAfwAAAP+AAAP/4AAH8=
</value>
  </data>
</root>